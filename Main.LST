C51 COMPILER V9.60.0.0   MAIN                                                              08/23/2020 22:56:23 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE SYMBOLS TABS(2)

line level    source

   1          #include <REG51.H>
   2          #include <stdio.h>  
   3          
   4          int flag = 0;
   5          int arr[5];
   6          int index=0;
   7          int freq[5];
   8          int ampl[5];
   9          int res[5]; //binary versions
  10          int lookup[10] = {31, 15, 7, 3, 1, 0, 16, 24, 28, 30};
  11          int i=0;
  12          int check=1;
  13          
  14          
  15          void serial_isr() interrupt 4{  
  16   1        static char ch = '\0';  
  17   1        if(RI == 1)
  18   1        {
  19   2          flag=0;   
  20   2          ch = SBUF;
  21   2          if(ch != '\*' && ch != '\#'){
  22   3            if(ch >= '0' && ch <= '9'){
  23   4              arr[index]=ch-'0';
  24   4              index++;
  25   4            }
  26   3                  
  27   3          }else if(ch == '\*') {
  28   3            SBUF=arr;
  29   3            flag=1; //frequency number came
  30   3            index = 0; 
  31   3            i=0; 
  32   3          }else if (ch == '\#'){
  33   3            SBUF=arr;
  34   3            flag=2; //amplitude number came
  35   3            index = 0; 
  36   3            i=0;
  37   3          }
  38   2          
  39   2          RI=0;
  40   2          TI=1;
  41   2        
  42   2        }else if(TI==1) {
  43   2          TI=0;
  44   2          if(ch!='\0'){
  45   3            SBUF = ch;
  46   3            ch = '\0';
  47   3          }
  48   2        }
  49   1      }
  50          
  51          //take the number in lookup, convert it to 5 bit binary
  52          void frequency(){
  53   1        printf("freq");
  54   1        for(i=0; i<sizeof(arr); i++){
  55   2          freq[i] = arr[i];
C51 COMPILER V9.60.0.0   MAIN                                                              08/23/2020 22:56:23 PAGE 2   

  56   2        }
  57   1        flag=0;
  58   1      }
  59          
  60          void amplitude(){
  61   1        printf("ampl");
  62   1          for(i=0; i<sizeof(arr); i++){
  63   2          ampl[i] = arr[i];
  64   2        }
  65   1        flag=0;
  66   1      }
  67          
  68          
  69          void main (void)  {
  70   1        int counter=4;
  71   1        
  72   1        int j;
  73   1        
  74   1        SCON = 0x52;    /* SCON */                   /* setup serial port control */
  75   1        TMOD = 0x20;    /* TMOD */                   /* hardware (2400 BAUD @12MHZ) */
  76   1        TCON = 0x69;    /* TCON */
  77   1        TH1 =  0xf3;    /* TH1 */
  78   1        
  79   1        TR1 = 1;      // Turn ON the timer for Baud rate generation
  80   1        ES  = 1;      // Enable Serial INterrupt
  81   1        EA  = 1;      // Enable Global Interrupt bit
  82   1      
  83   1        while(1){
  84   2          if (flag==1){     
  85   3            frequency();
  86   3          }else if(flag==2){
  87   3            amplitude();
  88   3          }
  89   2        }
  90   1      }
*** WARNING C280 IN LINE 72 OF Main.c: 'j': unreferenced local variable
C51 COMPILER V9.60.0.0   MAIN                                                              08/23/2020 22:56:23 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION serial_isr (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0D0              PUSH    PSW
0004 75D000            MOV     PSW,#00H
0007 C000              PUSH    AR0
0009 C006              PUSH    AR6
000B C007              PUSH    AR7
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 17
000D 209803            JB      RI,$ + 6H
0010 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
0013 750000      R     MOV     flag,#00H
0016 750000      R     MOV     flag+01H,#00H
                                           ; SOURCE LINE # 20
0019 859900      R     MOV     ch,SBUF
                                           ; SOURCE LINE # 21
001C E500        R     MOV     A,ch
001E 642A              XRL     A,#02AH
0020 6041              JZ      ?C0002
0022 E500        R     MOV     A,ch
0024 6423              XRL     A,#023H
0026 603B              JZ      ?C0002
                                           ; SOURCE LINE # 22
0028 AF00        R     MOV     R7,ch
002A EF                MOV     A,R7
002B 33                RLC     A
002C 95E0              SUBB    A,ACC
002E FE                MOV     R6,A
002F C3                CLR     C
0030 EF                MOV     A,R7
0031 9430              SUBB    A,#030H
0033 EE                MOV     A,R6
0034 6480              XRL     A,#080H
0036 9480              SUBB    A,#080H
0038 4053              JC      ?C0004
003A D3                SETB    C
003B EF                MOV     A,R7
003C 9439              SUBB    A,#039H
003E EE                MOV     A,R6
003F 6480              XRL     A,#080H
0041 9480              SUBB    A,#080H
0043 5048              JNC     ?C0004
                                           ; SOURCE LINE # 23
0045 EF                MOV     A,R7
0046 24D0              ADD     A,#0D0H
0048 FF                MOV     R7,A
0049 EE                MOV     A,R6
004A 34FF              ADDC    A,#0FFH
004C FE                MOV     R6,A
004D E500        R     MOV     A,index+01H
004F 25E0              ADD     A,ACC
0051 2400        R     ADD     A,#LOW arr
0053 F8                MOV     R0,A
0054 A606              MOV     @R0,AR6
0056 08                INC     R0
0057 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 24
C51 COMPILER V9.60.0.0   MAIN                                                              08/23/2020 22:56:23 PAGE 4   

0059 0500        R     INC     index+01H
005B E500        R     MOV     A,index+01H
005D 702E              JNZ     ?C0004
005F 0500        R     INC     index
0061         ?C0026:
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 27
0061 802A              SJMP    ?C0004
0063         ?C0002:
0063 E500        R     MOV     A,ch
0065 B42A0B            CJNE    A,#02AH,?C0005
                                           ; SOURCE LINE # 28
0068 759900      R     MOV     SBUF,#LOW arr
                                           ; SOURCE LINE # 29
006B 750000      R     MOV     flag,#00H
006E 750001      R     MOV     flag+01H,#01H
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0071 800E              SJMP    ?C0029
0073         ?C0005:
0073 E500        R     MOV     A,ch
0075 B42315            CJNE    A,#023H,?C0004
                                           ; SOURCE LINE # 33
0078 759900      R     MOV     SBUF,#LOW arr
                                           ; SOURCE LINE # 34
007B 750000      R     MOV     flag,#00H
007E 750002      R     MOV     flag+01H,#02H
                                           ; SOURCE LINE # 35
0081         ?C0029:
0081 750000      R     MOV     index,#00H
0084 750000      R     MOV     index+01H,#00H
                                           ; SOURCE LINE # 36
0087 750000      R     MOV     i,#00H
008A 750000      R     MOV     i+01H,#00H
                                           ; SOURCE LINE # 37
008D         ?C0004:
                                           ; SOURCE LINE # 39
008D C298              CLR     RI
                                           ; SOURCE LINE # 40
008F D299              SETB    TI
                                           ; SOURCE LINE # 42
0091 800E              SJMP    ?C0011
0093         ?C0001:
0093 30990B            JNB     TI,?C0011
                                           ; SOURCE LINE # 43
0096 C299              CLR     TI
                                           ; SOURCE LINE # 44
0098 E500        R     MOV     A,ch
009A 6005              JZ      ?C0011
                                           ; SOURCE LINE # 45
009C F599              MOV     SBUF,A
                                           ; SOURCE LINE # 46
009E 750000      R     MOV     ch,#00H
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 49
00A1         ?C0011:
00A1 D007              POP     AR7
00A3 D006              POP     AR6
00A5 D000              POP     AR0
00A7 D0D0              POP     PSW
C51 COMPILER V9.60.0.0   MAIN                                                              08/23/2020 22:56:23 PAGE 5   

00A9 D0E0              POP     ACC
00AB 32                RETI    
             ; FUNCTION serial_isr (END)

             ; FUNCTION frequency (BEGIN)
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
0000 7BFF              MOV     R3,#0FFH
0002 7A00        R     MOV     R2,#HIGH ?SC_0
0004 7900        R     MOV     R1,#LOW ?SC_0
0006 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 54
0009 E4                CLR     A
000A F500        R     MOV     i,A
000C F500        R     MOV     i+01H,A
000E         ?C0012:
                                           ; SOURCE LINE # 55
000E AF00        R     MOV     R7,i+01H
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 2400        R     ADD     A,#LOW arr
0015 F8                MOV     R0,A
0016 E6                MOV     A,@R0
0017 FC                MOV     R4,A
0018 08                INC     R0
0019 E6                MOV     A,@R0
001A FD                MOV     R5,A
001B EF                MOV     A,R7
001C 25E0              ADD     A,ACC
001E 2400        R     ADD     A,#LOW freq
0020 F8                MOV     R0,A
0021 A604              MOV     @R0,AR4
0023 08                INC     R0
0024 A605              MOV     @R0,AR5
                                           ; SOURCE LINE # 56
0026 0500        R     INC     i+01H
0028 E500        R     MOV     A,i+01H
002A 7002              JNZ     ?C0027
002C 0500        R     INC     i
002E         ?C0027:
002E 640A              XRL     A,#0AH
0030 4500        R     ORL     A,i
0032 70DA              JNZ     ?C0012
0034         ?C0013:
                                           ; SOURCE LINE # 57
0034 E4                CLR     A
0035 F500        R     MOV     flag,A
0037 F500        R     MOV     flag+01H,A
                                           ; SOURCE LINE # 58
0039 22                RET     
             ; FUNCTION frequency (END)

             ; FUNCTION amplitude (BEGIN)
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0000 7BFF              MOV     R3,#0FFH
0002 7A00        R     MOV     R2,#HIGH ?SC_5
0004 7900        R     MOV     R1,#LOW ?SC_5
0006 120000      E     LCALL   _printf
                                           ; SOURCE LINE # 62
0009 E4                CLR     A
000A F500        R     MOV     i,A
C51 COMPILER V9.60.0.0   MAIN                                                              08/23/2020 22:56:23 PAGE 6   

000C F500        R     MOV     i+01H,A
000E         ?C0016:
                                           ; SOURCE LINE # 63
000E AF00        R     MOV     R7,i+01H
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 2400        R     ADD     A,#LOW arr
0015 F8                MOV     R0,A
0016 E6                MOV     A,@R0
0017 FC                MOV     R4,A
0018 08                INC     R0
0019 E6                MOV     A,@R0
001A FD                MOV     R5,A
001B EF                MOV     A,R7
001C 25E0              ADD     A,ACC
001E 2400        R     ADD     A,#LOW ampl
0020 F8                MOV     R0,A
0021 A604              MOV     @R0,AR4
0023 08                INC     R0
0024 A605              MOV     @R0,AR5
                                           ; SOURCE LINE # 64
0026 0500        R     INC     i+01H
0028 E500        R     MOV     A,i+01H
002A 7002              JNZ     ?C0028
002C 0500        R     INC     i
002E         ?C0028:
002E 640A              XRL     A,#0AH
0030 4500        R     ORL     A,i
0032 70DA              JNZ     ?C0016
0034         ?C0017:
                                           ; SOURCE LINE # 65
0034 E4                CLR     A
0035 F500        R     MOV     flag,A
0037 F500        R     MOV     flag+01H,A
                                           ; SOURCE LINE # 66
0039 22                RET     
             ; FUNCTION amplitude (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
0000 750000      R     MOV     counter,#00H
0003 750004      R     MOV     counter+01H,#04H
                                           ; SOURCE LINE # 74
0006 759852            MOV     SCON,#052H
                                           ; SOURCE LINE # 75
0009 758920            MOV     TMOD,#020H
                                           ; SOURCE LINE # 76
000C 758869            MOV     TCON,#069H
                                           ; SOURCE LINE # 77
000F 758DF3            MOV     TH1,#0F3H
                                           ; SOURCE LINE # 79
0012 D28E              SETB    TR1
                                           ; SOURCE LINE # 80
0014 D2AC              SETB    ES
                                           ; SOURCE LINE # 81
0016 D2AF              SETB    EA
0018         ?C0020:
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
0018 E500        R     MOV     A,flag+01H
001A 6401              XRL     A,#01H
C51 COMPILER V9.60.0.0   MAIN                                                              08/23/2020 22:56:23 PAGE 7   

001C 4500        R     ORL     A,flag
001E 7005              JNZ     ?C0022
                                           ; SOURCE LINE # 85
0020 120000      R     LCALL   frequency
                                           ; SOURCE LINE # 86
0023 80F3              SJMP    ?C0020
0025         ?C0022:
0025 E500        R     MOV     A,flag+01H
0027 6402              XRL     A,#02H
0029 4500        R     ORL     A,flag
002B 70EB              JNZ     ?C0020
                                           ; SOURCE LINE # 87
002D 120000      R     LCALL   amplitude
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
0030 80E6              SJMP    ?C0020
             ; FUNCTION main (END)

C51 COMPILER V9.60.0.0   MAIN                                                              08/23/2020 22:56:23 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


check. . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0001H  2
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
_printf. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
index. . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0003H  2
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
flag . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0005H  2
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
lookup . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0007H  20
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  counter. . . . . . . . . . . . . . .  AUTO     DATA   INT      0000H  2
  j. . . . . . . . . . . . . . . . . .  AUTO     DATA   INT      0002H  2
ampl . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    001BH  10
freq . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0025H  10
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
serial_isr . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ch . . . . . . . . . . . . . . . . .  STATIC   DATA   CHAR     0000H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
arr. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    002FH  10
amplitude. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
res. . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0039H  10
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
frequency. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
i. . . . . . . . . . . . . . . . . . .  PUBLIC   DATA   INT      0043H  2


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    338    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     69       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
